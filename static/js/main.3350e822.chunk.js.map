{"version":3,"sources":["assets/survey-logo.jpg","components/surveyContainer/survey.tsx","components/surveyUserData/surveyUserData.tsx","components/questionsContainer/questions.tsx","components/reportContainer/report.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Survey","history","useHistory","className","src","logo","onClick","push","SurveyUserData","useState","country","setAllCountry","name","setName","nameError","setNameError","email","setEmail","emailError","setEmailError","countryName","setCountryName","countryNameError","setCountryNameError","age","setAge","ageError","setAgeError","gender","setGender","useEffect","a","Axios","get","response","data","onchangeText","type","value","onChange","target","length","map","i","key","reg","test","localStorage","setItem","JSON","stringify","replace","onsubmit","Questions","parse","String","getItem","Number","location","pathname","index","setIndex","questionsArray","questions","updateQuestions","changeQuestion","selectedOption","selected","updateData","id","question","options","option","j","Report","userDetails","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3350e822.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/survey-logo.7d0906b7.jpg\";","import React from 'react'\nimport logo from '../../assets/survey-logo.jpg'\nimport { useHistory } from \"react-router-dom\";\n\nexport const Survey=()=> {\n    let history = useHistory();\nreturn (\n    <div className=\"header\">\n        <div className=\"main-box\">\n            <div className=\"sub-box\">\n                <img src={logo} className=\"image-style\"/>\n                <div className=\"button-wrap\">\n                    <button onClick={()=>history.push('/survey')}>Start Survey</button>\n                </div>\n            </div>\n        </div>\n    </div>\n    )\n}","import React from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport Axios from 'axios'\nimport { useEffect, useState } from \"react\";\nimport {userSchema} from '../../schema'\n\n\nexport const SurveyUserData = () => {\n\tlet history = useHistory();\n\tconst [country, setAllCountry] = useState([])\n\tconst [name, setName] = useState(\"\")\n\tconst [nameError, setNameError] = useState(\"\")\n\tconst [email, setEmail] = useState(\"\")\n\tconst [emailError, setEmailError] = useState(\"\")\n\tconst [countryName, setCountryName] = useState(\"\")\n\tconst [countryNameError, setCountryNameError] = useState(\"\")\n\tconst [age, setAge] = useState(\"\")\n\tconst [ageError, setAgeError] = useState(\"\")\n\tconst [gender, setGender] = useState(\"\")\n\n\tuseEffect(() => {\n\t\t(async () => {\n\t\t\tlet response = await Axios.get('https://restcountries.eu/rest/v2/all')\n\t\t\tsetAllCountry(response.data)\n\t\t})()\n\t}, [])\n\n\tlet onchangeText = (data: string, type: string) => {\n\t\tif (data != ' ') {\n\t\t\tswitch (type) {\n\t\t\t\tcase 'name':\n\t\t\t\t\tsetName(data);\n\t\t\t\t\tsetNameError(\"\")\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'email':\n\t\t\t\t\tsetEmail(data);\n\t\t\t\t\tsetEmailError(\"\");\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'country':\n\t\t\t\t\tsetCountryName(data);\n\t\t\t\t\tsetCountryNameError(\"\")\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'age':\n\t\t\t\t\tsetAge(data);\n\t\t\t\t\tsetAgeError(\"\")\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gender':\n\t\t\t\t\tsetGender(data);\n\t\t\t}\n\t\t}\n\t}\n\n\tlet onsubmit = () => {\n\t\tlet reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n\t\tif (!name.length) {\n\t\t\tsetNameError(\"Full name cannot be blank.\")\n\t\t}\n\t\tif (!email.length) {\n\t\t\tsetEmailError(\"Email cannot be blank.\")\n\t\t} else if(!reg.test(email)) {\n\t\t\tsetEmailError(\"Invalid Email.\")\n\t\t}\n\t\tif (!countryName.length) {\n\t\t\tsetCountryNameError(\"country cannot be blank.\");\n\t\t}\n\t\tif (!age.length) {\n\t\t\tsetAgeError(\"Age cannot be blank.\")\n\t\t}\n\t\tif (name.length && email.length && reg.test(email) && countryName.length && age.length) {\n\t\t\tlocalStorage.setItem('USER', JSON.stringify({ name, email, country: countryName, age, gender }))\n\t\t\thistory.replace('/survey/question/1')\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<div className=\"main-box\">\n\t\t\t\t<div className=\"form\">\n\t\t\t\t\t<p>User Details</p>\n\t\t\t\t\t<div className=\"single-field\">\n\t\t\t\t\t\t<label >Full Name <sup>*</sup></label>\n\t\t\t\t\t\t<input value={name} onChange={(data) => { onchangeText(data.target.value, 'name') }} type=\"text\" className=\"form-control\" />\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnameError.length ?\n\t\t\t\t\t\t\t\t<div className=\"error\">{nameError}</div> : null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"single-field\">\n\t\t\t\t\t\t<label >Email <sup>*</sup></label>\n\t\t\t\t\t\t<input value={email} onChange={(data) => { onchangeText(data.target.value, 'email') }} type=\"text\" className=\"form-control\" />\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\temailError.length ?\n\t\t\t\t\t\t\t\t<div className=\"error\">{emailError}</div> : null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"single-field\">\n\t\t\t\t\t\t<label >Country <sup>*</sup></label>\n\t\t\t\t\t\t<select value={countryName} onChange={(data) => { onchangeText(data.target.value, 'country') }} className=\"form-control\">\n\t\t\t\t\t\t\t<option value=\"\">Select</option>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcountry.map((data:userSchema, i) => (\n\t\t\t\t\t\t\t\t\t<option key={i} value={data.name}>{data.name}</option>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcountryNameError.length ?\n\t\t\t\t\t\t\t\t<div className=\"error\">{countryNameError}</div> : null\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"two-in-one\">\n\t\t\t\t\t\t<div className=\"single-field padding-right\">\n\t\t\t\t\t\t\t<label >Age <sup>*</sup></label>\n\t\t\t\t\t\t\t<input value={age} onChange={(data) => { onchangeText(data.target.value, 'age') }} type=\"number\" className=\"form-control\" />\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tageError.length ?\n\t\t\t\t\t\t\t\t\t<div className=\"error\">{ageError}</div> : null\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"single-field padding-left\">\n\t\t\t\t\t\t\t<label >Gender </label>\n\t\t\t\t\t\t\t<select value={gender} onChange={(data) => { onchangeText(data.target.value, 'gender') }} className=\"form-control\">\n\t\t\t\t\t\t\t\t<option value=\"\">Select</option>\n\t\t\t\t\t\t\t\t<option value=\"Male\">Male</option>\n\t\t\t\t\t\t\t\t<option value=\"Female\">Female</option>\n\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"md-button center\">\n\t\t\t\t\t\t<button onClick={() => onsubmit()}>Continue</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport questionsArray from '../questions.json'\nimport {questionsSchema} from '../../schema'\nexport const Questions = () => {\n\tlet history = useHistory();\n\tlet userData = JSON.parse(String(localStorage.getItem('USER')))\n\tif (userData == null) {\n\t\thistory.replace('/')\n\t}\n\tconst [index, setIndex] = useState(Number(history.location.pathname[history.location.pathname.length - 1]))\n\tconst [questions, updateQuestions] = useState(questionsArray)\n\n\n\tuseEffect(() => {\n\t\tsetIndex(Number(history.location.pathname[history.location.pathname.length - 1]))\n\t}, [history.location.pathname])\n\n\tlet changeQuestion = (index: number) => {\n\t\tif (index >= questions.length - (questions.length - 1) && index <= questions.length) {\n\t\t\thistory.push(`/survey/question/${index}`)\n\t\t}\n\t}\n\n\tlet selectedOption = (selected: string, index: number) => {\n\t\tlet updateData = []\n\t\tfor (let data of questions) {\n\t\t\tif (data.id == index) {\n\t\t\t\tdata.selected = selected\n\t\t\t}\n\t\t\tupdateData.push(data)\n\t\t}\n\t\tupdateQuestions(updateData)\n\t}\n\n\tlet onsubmit=()=>{\n\t\tlocalStorage.setItem('QUESTIONS',JSON.stringify(questions))\n\t\thistory.replace('/survey/report')\n\t}\n\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<div className=\"main-box\">\n\t\t\t\t<div className=\"form\">\n\t\t\t\t\t{\n\t\t\t\t\t\tquestions.map((data: questionsSchema, i: number) => {\n\t\t\t\t\t\t\tif (data.id == index) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<div key={i} className=\"question-style\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"align-questions\">\n\t\t\t\t\t\t\t\t\t\t<p>{data.id+'.'}&nbsp;</p>\n\t\t\t\t\t\t\t\t\t\t<p>{data.question}</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tdata.options.map((option: string, j: number) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<div key={j} className={`options align-questions ${(data.selected == option)?'green':''}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div onClick={() => selectedOption(option, index)} className={`custom-radio ${(data.selected == option)?'custom-border':''}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(data.selected == option)?\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span></span>:null\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"padding-left cursor\" onClick={() => selectedOption(option, index)}>{option}</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t<div className=\"footer\">\n\t\t\t\t\t\t<i className={`fa fa-chevron-left icon ${index > questions.length - (questions.length - 1) ? 'brand-color' : 'grey-color'}`} onClick={() => changeQuestion(index - 1)}></i>\n\t\t\t\t\t\t<i className={`fa fa-chevron-right icon ${index <= questions.length - 1 ? questions[index-1].selected.length?'brand-color' : 'grey-color':'grey-color'}`} onClick={() => changeQuestion(index + 1)}></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t{\n\t\t\t\t\t\t\tquestions[questions.length-1].selected.length ?\n\t\t\t\t\t\t\t\t<div className=\"md-button center\">\n\t\t\t\t\t\t\t\t\t<button className=\"center1\" onClick={() => onsubmit()}>Submit</button>\n\t\t\t\t\t\t\t\t</div> : null\n\t\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { questionsSchema } from '../../schema';\n\nexport const Report = () => {\n\tlet history = useHistory();\n\tlet userDetails = JSON.parse(String(localStorage.getItem('USER')))\n\tif (userDetails == null) {\n\t\thistory.replace('/')\n\t}\n\tlet questions = JSON.parse(String(localStorage.getItem('QUESTIONS')))\n\n\treturn (\n\t\t<div className=\"header\">\n\t\t\t<div className=\"main-box\">\n\t\t\t\t{\n\t\t\t\t\tuserDetails != null ?\n\t\t\t\t\t\t<div className=\"form\">\n\t\t\t\t\t\t\t<p>Report</p>\n\t\t\t\t\t\t\t<div className=\"userDetails\">\n\t\t\t\t\t\t\t\t<div><b>Name :</b> <span>{userDetails.name}</span></div>\n\t\t\t\t\t\t\t\t<div><b>Email :</b> <span>{userDetails.email}</span></div>\n\t\t\t\t\t\t\t\t<div><b>Country :</b> <span>{userDetails.country}</span></div>\n\t\t\t\t\t\t\t\t<div><b>Age :</b> <span>{userDetails.age}</span></div>\n\t\t\t\t\t\t\t\t<div><b>Gender :</b> <span>{userDetails.gender.length ? userDetails.gender : 'not specified'}</span></div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<p>Questionnaires</p>\n\t\t\t\t\t\t\t<div className=\"questions\">\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tquestions.map((question: questionsSchema, i: number) => (\n\t\t\t\t\t\t\t\t\t\t<div className=\"align-questions-col\">\n\t\t\t\t\t\t\t\t\t\t\t<div key={i} className=\"align-questions\">\n\t\t\t\t\t\t\t\t\t\t\t\t<b>{question.id + '.'}&nbsp;</b>\n\t\t\t\t\t\t\t\t\t\t\t\t<div>{question.question}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div key={i} className=\"align-questions\">\n\t\t\t\t\t\t\t\t\t\t\t\t<b>Ans.&nbsp;</b>\n\t\t\t\t\t\t\t\t\t\t\t\t<div>{question.selected}</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div> : null\n\t\t\t\t}\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react';\nimport './App.css';\nimport { Survey } from './components/surveyContainer/survey';\nimport { BrowserRouter as Router, Route,Switch } from \"react-router-dom\";\nimport { SurveyUserData } from './components/surveyUserData/surveyUserData';\nimport { Questions } from './components/questionsContainer/questions';\nimport { Report } from './components/reportContainer/report';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Survey}/>\n        <Route exact path=\"/survey\" component={SurveyUserData}/>\n        <Route exact path=\"/survey/question/:id\" component={Questions}/>\n        <Route exact path=\"/survey/report\" component={Report}/>\n      </Switch>\n  </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}